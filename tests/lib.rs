// extern crate compression;

// #[test]
// fn decompress() {
// 	use std::io::{ Cursor, Read };
// 	use compression::gzip::Decompressor;

// 	let gzip_stream = Cursor::new(vec![0x1fu8, 0x8bu8, 0x08u8, 0x08u8, 0x9fu8, 0x30u8, 0x04u8, 0x56u8, 0x00u8, 0x03u8, 0x78u8, 0x78u8, 0x78u8, 0x78u8, 0x78u8, 0x79u8, 0x79u8, 0x79u8, 0x79u8, 0x79u8, 0x2eu8, 0x74u8, 0x78u8, 0x74u8, 0x00u8, 0xabu8, 0xa8u8, 0x00u8, 0x82u8, 0x4au8, 0x10u8, 0x00u8, 0x00u8, 0x42u8, 0x62u8, 0xddu8, 0x64u8, 0x0au8, 0x00u8, 0x00u8, 0x00u8]);
// 	let mut decompressed = &mut String::new();

// 	let _ = Decompressor::new(gzip_stream).read_to_string(&mut decompressed);

// 	assert_eq!("xxxxxyyyyy", decompressed);
// }