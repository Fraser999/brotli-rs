Analysis of xxxxxyyyyy.txt.gz:
1f8b 0808 bf72 1056 0003 6162 6363 6261
2e74 7874 009d cbb7 0100 2008 00b0 5bb1
6345 ec5e ef0f 660f 08a9 b4b1 0e7d 8829
17aa dcfa 986b 9f7b cf5e 73f4 c695 4a4e
3178 74d6 6825 05c0 c779 72f1 8dd6 6800
0000

Gzip Header
===========

0x1f                # fixed value ID1
0x8b                # fixed value ID2
                    # ID1 = 0x1f and ID2 = 0x8b identify the
                    #     file as being in gzip format
0x08                # CM => Compression method =
                    #     8 denotes "deflate"
0x08 = 0000 1000    # FLG => this byte sets a number of flags
                    # FTEXT    = 0
                    # FHCRC    = 0
                    # FEXTRA   = 0
                    # FNAME    = 1 =>
                    #     an original file name is present,
                    #     terminated by a zero byte
                    # FCOMMENT = 0
                    # reserved = 0
                    # reserved = 0
                    # reserved = 0
0x56 0x10 0x72 0xbf # MTime, 4 bytes
                    # 86 * 256^3 + 16 * 256^2 + 115 * 256 + 191 = 1443918783
                    # => Sun, 04 Oct 2015 00:33:03 GMT
0x00                # XFL => no flags set(?)
0x03                # OS = 3 => Unix
0x61 0x62 0x63 0x63
0x62 0x61 0x2e 0x74
0x78 0x74 0x00
                    # FNAME is set, so this is a zero-
                    # termindated string containing the
                    # original file name "abccba.txt"

Compressed blocks
=================

0x9d = 1001 1101
1                   # BFINAL => true, this is the last
                    #           block of the data set
10                  # BTYPE => compressed with dynamic
                    #          Huffman codes
1001 1              # HLIT => 19 => # of literal/length codes = 19 + 257 = 276

0xcb = 1100 1011
0 1011              # HDIST => 11 => # of distance codes = 1 + 11 = 12

0xb7 = 1011 0111 [110]
1110                # HCLEN => 14 => # of code length codes = 4 + 14 = 18

                    # now follow HCLEN * 3 bits of code lengths
                    # => 18 * 3 = 54 bits
                    # We still have a remainder of 7 bits,
                    # leaving 47 bits, which means
                    # we need 6 bytes
[1011 011]

0xb0 0x00 0x08 0x20 0x00 0x01
1*011 0000 0000 0000 0000 1000 0010
0000 0000 0000 0000 0001 [1011 011]

|idx|symbol|code length|
|  0|    16|   011 => 3|
|  1|    17|   011 => 3|
|  2|    18|   011 => 3|
|  3|     0|   000 => 0|
|  4|     8|   000 => 0|
|  5|     7|   000 => 0|
|  6|     9|   000 => 0|
|  7|     6|   000 => 0|
|  8|    10|   000 => 0|
|  9|     5|   010 => 2|
| 10|    11|   000 => 0|
| 11|     4|   010 => 2|
| 12|    12|   000 => 0|
| 13|     3|   000 => 0|
| 14|    13|   000 => 0|
| 15|     2|   000 => 0|
| 16|    14|   000 => 0|
| 17|     1|   011 => 3|

Some(Inner(Node { left: Some(Inner(Node { left: Some(Leaf(9)), right: Some(Leaf(11)) })), right: Some(Inner(Node { left: Some(Inner(Node { left: Some(Leaf(0)), right: Some(Leaf(1)) })), right: Some(Inner(Node { left: Some(Leaf(2)), right: Some(Leaf(17)) })) })) }))
     *
    / \
   /   \
  *     *
 / \   / \
4   5 /   \
     *     *
    / \   / \
   1  16 17 18

0x5b

0101 1011 [1]

