extern crate compression;

fn main() {
	use std::io::{ Cursor, Read };
	use compression::brotli::Decompressor;
	use compression::bitreader::BitReader;

	let brotli_stream = BitReader::new(Cursor::new(vec![
		0x1b, 0x76,  0x00, 0x00,  0x14, 0x4a,  0xac, 0x9b,  0x7a, 0xbd,  0xe1, 0x97,  0x9d, 0x7f,  0x8e, 0xc2,
		0x82, 0x36,  0x0e, 0x9c,  0xe0, 0x90,  0x03, 0xf7,  0x8b, 0x9e,  0x38, 0xe6,  0xb6, 0x00,  0xab, 0xc3,
		0xca, 0xa0,  0xc2, 0xda,  0x66, 0x36,  0xdc, 0xcd,  0x80, 0x8d,  0x2e, 0x21,  0xd7, 0x6e,  0xe3, 0xea,
		0x4c, 0xb8,  0xf0, 0xd2,  0xb8, 0xc7,  0xc2, 0x70,  0x4d, 0x3a,  0xf0, 0x69,  0x7e, 0xa1,  0xb8, 0x45,
		0x73, 0xab,  0xc4, 0x57,  0x1e,
	]));

	let mut decompressed = &mut String::new();
	let _ = Decompressor::new(brotli_stream).read_to_string(&mut decompressed);

	assert_eq!("ukko nooa, ukko nooa oli kunnon mies, kun han meni saunaan, pisti laukun naulaan, ukko nooa, ukko nooa oli kunnon mies.", decompressed);

	println!("{:?}", decompressed);
}

